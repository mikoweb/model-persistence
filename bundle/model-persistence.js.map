{"version":3,"file":"model-persistence.js","sources":["../src/core/namespace.js","../src/model/DynamicModel.js","../src/core/Interface.js","../src/locator/LocatorInterface.js","../src/model-manager/ModelManagerInterface.js","../src/repository/RepositoryInterface.js","../src/transformer/TransformerInterface.js","../src/transformer/InputTransformer.js","../src/model/modelHelpers.js","../src/transformer/OutputTransformer.js","../src/locator/LocatorAbstract.js","../src/model-manager/ModelManagerAbstract.js","../src/model-manager/HTTPModelManager.js","../src/repository/HTTPRepository.js","../src/locator/HTTPLocatorAbstract.js","../src/factory/FactoryInterface.js","../src/http/clientConfig.js","../src/http/createClient.js","../src/factory/HTTPFactory.js","../src/factory/http.js","../src/transformer/CustomTransformer.js","../src/transformer/mergeTransformers.js","../src/model-manager/StorageModelManager.js","../src/repository/StorageRepository.js","../src/locator/StorageLocatorAbstract.js","../src/locator/LocalStorageLocatorAbstract.js","../src/locator/SessionStorageLocatorAbstract.js","../src/factory/StorageFactory.js","../src/factory/storage.js","../src/index.js"],"sourcesContent":["/**\n * @param {Object} object\n */\nconst namespace = (object) => {\n    Object.keys(object).forEach((key) => {\n        const prop = object[key];\n        const descriptor = Object.getOwnPropertyDescriptor(object, key);\n\n        Object.defineProperty(object, key, {\n            enumerable: true,\n            configurable: false,\n            writable: false,\n            value: descriptor.value\n        });\n\n        if (prop !== null && typeof prop === 'object' && prop.constructor === Object) {\n            namespace(prop);\n        }\n    });\n};\n\nexport default namespace;\n","/**\n * It's shit model type like object literal. No schema, no strong typing, no validation, no nothing.\n */\nexport default class DynamicModel {\n    /**\n     * @param {Object} object\n     */\n    constructor(object) {\n        if (object === null || typeof object !== 'object') {\n            throw new TypeError('expecting object literal');\n        }\n\n        for (const prop in object) {\n            if (object.hasOwnProperty(prop)) {\n                this[prop] = object[prop];\n            }\n        }\n    }\n\n    /**\n     * @return {string}\n     */\n    toJSON() {\n        return JSON.stringify(this);\n    }\n}\n","export default class Interface {\n    defineInterfaceMethod() {\n        throw new Error('Class should implement this method');\n    }\n}\n","import Interface from '../core/Interface';\n\n/**\n * Data locator.\n */\nexport default class LocatorInterface extends Interface {\n    /**\n     * Locate place where model is storage.\n     *\n     * @param {Model} model\n     * @param {Object} [options]\n     * @return {string}\n     */\n    locate(model, options = {}) {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Locate place by id.\n     *\n     * @param id\n     * @param {Object} [options]\n     * @return {string}\n     */\n    locateById(id, options = {}) {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Name of id property.\n     *\n     * @return {string}\n     */\n    getIdPropName() {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Get id from model.\n     *\n     * @param {Model} model\n     * @return {*}\n     */\n    getModelId(model) {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Is empty model id?\n     *\n     * @param {Model} model\n     * @return {boolean}\n     */\n    isEmptyModelId(model) {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * ModelManagerClass related to this locator.\n     *\n     * @return {ModelManagerInterface.prototype}\n     */\n    getModelManagerClass() {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * RepositoryClass related to this locator.\n     *\n     * @return {RepositoryInterface.prototype}\n     */\n    getRepositoryClass() {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Input Transformer class related to this locator.\n     *\n     * @return {TransformerInterface.prototype}\n     */\n    getInputTransformerClass() {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Input Transformer class related to this locator.\n     *\n     * @return {TransformerInterface.prototype}\n     */\n    getOutputTransformerClass() {\n        this.defineInterfaceMethod();\n    }\n}\n","import Interface from '../core/Interface';\n\n/**\n * Data persistence layer.\n */\nexport default class ModelManagerInterface extends Interface {\n    /**\n     * Get model by id from storage.\n     *\n     * @async\n     * @param id\n     * @param {Model.prototype} modelClass\n     * @param {Object} [options]\n     * @return {Promise.<Model>}\n     */\n    get(id, modelClass, options = {}) {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Save model to storage.\n     *\n     * @async\n     * @param {Model} model\n     * @param {Object} [options]\n     * @return {Promise.<Object>}\n     */\n    save(model, options = {}) {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Remove model from storage.\n     *\n     * @async\n     * @param {Model} model\n     * @param {Object} [options]\n     * @return {Promise.<Object>}\n     */\n    remove(model, options = {}) {\n        this.defineInterfaceMethod();\n    }\n}\n","import Interface from '../core/Interface';\n\n/**\n * Repository pattern - data collection.\n */\nexport default class RepositoryInterface extends Interface {\n    /**\n     * Find one model by id from storage.\n     *\n     * @async\n     * @param id\n     * @return {Promise.<Model>}\n     */\n    findOne(id) {\n        this.defineInterfaceMethod();\n    }\n}\n","import Interface from '../core/Interface';\n\n/**\n * Data Transformer.\n */\nexport default class TransformerInterface extends Interface {\n    /**\n     * Transform data.\n     *\n     * @async\n     * @param {Object} object\n     * @return {Object}\n     */\n    transform(object) {\n        this.defineInterfaceMethod();\n    }\n}\n","import TransformerInterface from './TransformerInterface';\n\n/**\n * Default input transformer.\n * Used as \"middleware\" between data source (e.g. HTTP Response) and Model constructor.\n */\nexport default class InputTransformer extends TransformerInterface {\n    /**\n     * By default, nothing changes.\n     *\n     * @inheritdoc\n     */\n    transform(object) {\n        return object;\n    }\n}\n","import Model from 'objectmodel';\n\nclass ModelHelpers {\n    /**\n     * Get raw object data from model.\n     *\n     * @param {Model} model\n     * @param {boolean} isRaw\n     * @return {Object}\n     */\n    getData(model, isRaw = false) {\n        if (!isRaw && !this.isModel(model)) {\n            throw new TypeError(`expecting model to be Model, got ${typeof model}`);\n        }\n\n        const data = {};\n\n        if (this.isModel(model)) {\n            // This work's with ObjectModel 2.x version.\n            // For 3.x major must be changed to Object.keys()\n            for (const prop in model) {\n                if (model.hasOwnProperty(prop)) {\n                    const descriptor = Object.getOwnPropertyDescriptor(model, prop);\n\n                    if (typeof descriptor.get === 'function' && typeof model[prop] !== 'undefined') {\n                        data[prop] = this._getObjectValue(model, prop);\n                    }\n                }\n            }\n        } else if (this.isRawObject(model)) {\n            for (const prop in model) {\n                if (model.hasOwnProperty(prop)) {\n                    data[prop] = this._getObjectValue(model, prop);\n                }\n            }\n        }\n\n        return data;\n    }\n\n    /**\n     * Is model?\n     *\n     * @param {Object} object\n     */\n    isModel(object) {\n        return object !== null && typeof object === 'object' && (object instanceof Model ||\n            (typeof object.constructor === 'function' && object.constructor instanceof Model));\n    }\n\n    /**\n     * Is raw model?\n     *\n     * @param {Object} object\n     */\n    isRawObject(object) {\n        return object !== null && typeof object === 'object' && object.constructor === Object\n    }\n\n    /**\n     * @param {Model|Object} model\n     * @param {string} prop\n     * @return {*}\n     * @private\n     */\n    _getObjectValue(model, prop) {\n        let value;\n\n        if (Array.isArray(model[prop])) {\n            value = [];\n            model[prop].forEach((item) => {\n                value.push(this.isRawObject(item) || this.isModel(item) ? this.getData(item, true) : item);\n            });\n        } else {\n            value = model[prop];\n            value = this.isRawObject(value) || this.isModel(value) ? this.getData(value, true) : value;\n        }\n\n        return value;\n    }\n}\n\nconst helpers = new ModelHelpers();\n\nexport default helpers;\n","import TransformerInterface from './TransformerInterface';\nimport modelHelpers from '../model/modelHelpers';\nimport DynamicModel from '../model/DynamicModel';\n\n/**\n * Default output transformer.\n * Used as \"middleware\" between Model and data storage (e.g. HTTP Request).\n */\nexport default class OutputTransformer extends TransformerInterface {\n    /**\n     * Only properties from model schema.\n     *\n     * @inheritdoc\n     */\n    transform(object) {\n        let data = {};\n\n        if (modelHelpers.isModel(object)) {\n            data = modelHelpers.getData(object);\n        } else if (object instanceof DynamicModel || modelHelpers.isRawObject(object)) {\n            data = object;\n        }\n\n        return data;\n    }\n}\n","import LocatorInterface from './LocatorInterface';\nimport InputTransformer from '../transformer/InputTransformer';\nimport OutputTransformer from '../transformer/OutputTransformer';\n\n/**\n * Abstract Locator with common methods.\n */\nexport default class LocatorAbstract extends LocatorInterface {\n    /**\n     * @inheritdoc\n     */\n    getIdPropName() {\n        return 'id';\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getModelId(model) {\n        if (model === null || typeof model !== 'object') {\n            throw new Error('argument is not Object');\n        }\n\n        return model[this.getIdPropName()];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isEmptyModelId(model) {\n        const id = this.getModelId(model);\n\n        return id === null || typeof id === 'undefined' || (typeof id === 'string' && id.length === 0);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getInputTransformerClass() {\n        return InputTransformer;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getOutputTransformerClass() {\n        return OutputTransformer;\n    }\n}\n","import ModelManagerInterface from './ModelManagerInterface';\n\n/**\n * Data persistence layer - common.\n */\nexport default class ModelManagerAbstract extends ModelManagerInterface {\n    /**\n     * Create input transformer object.\n     *\n     * @return {TransformerInterface}\n     */\n    createInputTransformer() {\n        const Transformer = this._locator.getInputTransformerClass();\n\n        return new Transformer();\n    }\n\n    /**\n     * Create output transformer object.\n     *\n     * @return {TransformerInterface}\n     */\n    createOutputTransformer() {\n        const Transformer = this._locator.getOutputTransformerClass();\n\n        return new Transformer();\n    }\n}\n","import ModelManagerAbstract from './ModelManagerAbstract';\n\n/**\n * Data persistence by HTTP protocol.\n */\nexport default class HTTPModelManager extends ModelManagerAbstract {\n    /**\n     * @param {HTTPLocatorAbstract} locator\n     * @param {AxiosInstance} httpClient\n     */\n    constructor(locator, httpClient) {\n        super();\n        /** @protected */\n        this._locator = locator;\n        /** @protected */\n        this._client = httpClient;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    get(id, modelClass, options = {}) {\n        return new Promise((resolve, reject) => {\n            this._client.get(this._locator.locateById(id), this._getRequestOptions()).then((response) => {\n                resolve(new modelClass(this.createInputTransformer().transform(response.data)));\n            }).catch((e) => {\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    save(model, options = {}) {\n        return new Promise((resolve, reject) => {\n            const requestOptions = this._getRequestOptions();\n\n            const method = this._locator.isEmptyModelId(model) ? this._client.post : this._client.put;\n            method(this._locator.locate(model), this.createOutputTransformer().transform(model), requestOptions)\n                .then((response) => {\n                    resolve(response.data !== null && typeof response.data === 'object' ? response.data : {});\n                }).catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    remove(model, options = {}) {\n        return new Promise((resolve, reject) => {\n            this._client.delete(this._locator.locate(model), this._getRequestOptions()).then((response) => {\n                resolve(response.data !== null && typeof response.data === 'object' ? response.data : {});\n            }).catch((e) => {\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Common request options.\n     * This method is for overwriting.\n     *\n     * @protected\n     */\n    _getRequestOptions(additional = {}) {\n        return additional;\n    }\n}\n","import RepositoryInterface from './RepositoryInterface';\n\n/**\n * Data collection from HTTP protocol.\n */\nexport default class HTTPRepository extends RepositoryInterface {\n    /**\n     * @param {Model.prototype} modelClass\n     * @param {HTTPLocatorAbstract} locator\n     * @param {HTTPModelManager} manager\n     * @param {AxiosInstance} httpClient\n     */\n    constructor(modelClass, locator, manager, httpClient) {\n        super();\n        /** @protected */\n        this._modelClass = modelClass;\n        /** @protected */\n        this._locator = locator;\n        /** @protected */\n        this._manager = manager;\n        /** @protected */\n        this._client = httpClient;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findOne(id) {\n        return this._manager.get(id, this._modelClass);\n    }\n}\n","import LocatorAbstract from './LocatorAbstract';\nimport HTTPModelManager from '../model-manager/HTTPModelManager';\nimport HTTPRepository from '../repository/HTTPRepository';\n\n/**\n * Locator which locates data by HTTP protocol.\n */\nexport default class HTTPLocatorAbstract extends LocatorAbstract {\n    /**\n     * Host path like https://google.com. It's optionally.\n     *\n     * @return {string}\n     */\n    get hostPath() {\n        return '';\n    }\n\n    /**\n     * Base path in URL.\n     *\n     * @return {string}\n     */\n    get basePath() {\n        throw new Error('basePath should be defined in HTTPLocator');\n    }\n\n    /**\n     * Additional headers e.g. api key.\n     *\n     * @return {Object}\n     */\n    get headers() {\n        return {};\n    }\n\n    /**\n     * Get base URL.\n     *\n     * @return {string}\n     */\n    getBaseURL() {\n        return `${this.hostPath}${this.basePath}`;\n    }\n\n    /**\n     * Get custom URL.\n     *\n     * @param {string} path\n     * @return {string}\n     */\n    getUrl(path) {\n        return `${this.getBaseURL()}${path}`;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    locate(model, options = {}) {\n        return this.isEmptyModelId(model)\n            ? this.getBaseURL()\n            : this.locateById(this.getModelId(model), options);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    locateById(id, options = {}) {\n        return this.getUrl(`/${id}`);\n    }\n\n    /**\n     * @inheritdoc\n     *\n     * @return {HTTPModelManager.prototype}\n     */\n    getModelManagerClass() {\n        return HTTPModelManager;\n    }\n\n    /**\n     * @inheritdoc\n     *\n     * @return {HTTPRepository.prototype}\n     */\n    getRepositoryClass() {\n        return HTTPRepository;\n    }\n}\n","import Interface from '../core/Interface';\n\nexport default class FactoryInterface extends Interface {\n    /**\n     * Create ModelManager object.\n     *\n     * @param {LocatorInterface} locator\n     * @return {ModelManagerInterface}\n     */\n    createManager(locator) {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Create Repository object.\n     *\n     * @param {Model.prototype} modelClass\n     * @param {LocatorInterface} locator\n     * @return {RepositoryInterface}\n     */\n    createRepository(modelClass, locator) {\n        this.defineInterfaceMethod();\n    }\n}\n","class ClientConfig {\n    constructor() {\n        this.options = {};\n    }\n\n    /**\n     * @return {Object}\n     */\n    get options() {\n        return Object.assign({}, this._options);\n    }\n\n    /**\n     * @param {Object} options\n     */\n    set options(options) {\n        this._options = Object.assign({}, options);\n    }\n}\n\nconst options = new ClientConfig();\n\nexport default options;\n","import axios from 'axios';\nimport config from './clientConfig';\n\n/**\n * @param {HTTPLocatorAbstract} locator\n * @return {AxiosInstance}\n */\nconst createClient = (locator) => {\n    const options = {};\n\n    if (locator !== null && typeof locator === 'object' && Object.keys(locator.headers).length > 0) {\n        options.headers = Object.assign({}, locator.headers);\n    }\n\n    return axios.create(Object.assign({}, config.options, options));\n};\n\nexport default createClient;\n","import FactoryInterface from './FactoryInterface';\nimport createClient from '../http/createClient';\n\nexport default class HTTPFactory extends FactoryInterface {\n    /**\n     * @inheritdoc\n     *\n     * @param {HTTPLocatorAbstract} locator\n     * @return {HTTPModelManager}\n     */\n    createManager(locator) {\n        const Manager = locator.getModelManagerClass();\n\n        return new Manager(locator, createClient(locator));\n    }\n\n    /**\n     * @inheritdoc\n     *\n     * @param {Model.prototype} modelClass\n     * @param {HTTPLocatorAbstract} locator\n     * @return {HTTPRepository}\n     */\n    createRepository(modelClass, locator) {\n        const Repository = locator.getRepositoryClass();\n        const manager = this.createManager(locator);\n\n        return new Repository(modelClass, locator, manager, createClient(locator));\n    }\n}\n","import Factory from './HTTPFactory';\n\nconst factory = new Factory();\n\nexport default factory;\n","import TransformerInterface from './TransformerInterface';\n\n/**\n * CustomTransformer for dynamic method definition.\n */\nexport default class CustomTransformer extends TransformerInterface {\n}\n\n// EXAMPLE\n// Code inside Locator class.\n//getOutputTransformerClass() {\n    //return class extends CustomTransformer {\n        //transform(object) {\n            //return {\n                //newPropertyName: object.oldPropertyName,\n                // ...\n            //};\n        //}\n    //};\n//}\n","import TransformerInterface from './TransformerInterface';\n\n/**\n * @param {Array.<TransformerInterface>} transformers\n */\nconst mergeTransformers = (transformers) => {\n    return class extends TransformerInterface {\n        /**\n         * @inheritdoc\n         */\n        transform(object) {\n            let data = object;\n\n            transformers.forEach((transformer) => {\n                data = transformer.transform(data);\n            });\n\n            return data;\n        }\n    };\n};\n\nexport default mergeTransformers;\n","import ModelManagerAbstract from './ModelManagerAbstract';\nimport Model from 'objectmodel';\n\n/**\n * Data persistence by Web Storage API.\n * @url https://developer.mozilla.org/en-US/docs/Web/API/Storage\n */\nexport default class StorageModelManager extends ModelManagerAbstract {\n    /**\n     * @param {StorageLocatorAbstract} locator\n     */\n    constructor(locator) {\n        super();\n        /** @protected */\n        this._locator = locator;\n    }\n\n    /**\n     * @inheritdoc\n     *\n     * @return {Promise.<Model>}\n     */\n    get(id, modelClass, options = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const model = this.getSync(id, modelClass, options);\n                resolve(model);\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Synchronous version of the `get` method.\n     *\n     * @param id\n     * @param {Model.prototype} modelClass\n     * @param {Object} [options]\n     *\n     * @return {Model}\n     */\n    getSync(id, modelClass, options = {}) {\n        const locate = this._locator.locateById(id);\n        const item = this._locator.storage.getItem(locate);\n\n        if (item === null) {\n            throw new TypeError(`Item with the key [${locate}] was not found`);\n        }\n\n        return new modelClass(this.createInputTransformer().transform(JSON.parse(item)));\n    }\n\n    /**\n     * Get all stored Models.\n     *\n     * @param {Model.prototype} modelClass\n     *\n     * @return {Model.Array}\n     */\n    getAll(modelClass) {\n        const ArrayModel = new Model.Array(modelClass);\n        const items = [];\n\n        this.getKeys().forEach((id) => {\n            items.push(this.getSync(id, modelClass));\n        });\n\n        return ArrayModel(items);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    save(model, options = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.saveSync(model, options);\n                resolve({});\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Synchronous version of the `save` method.\n     *\n     * @param {Model} model\n     * @param {Object} [options]\n     */\n    saveSync(model, options = {}) {\n        this._locator.storage.setItem(this._locator.locate(model),\n            JSON.stringify(this.createOutputTransformer().transform(model)));\n\n        this._persistId(this._locator.getModelId(model));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    remove(model, options = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.removeSync(model, options);\n                resolve({});\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Synchronous version of the `remove` method.\n     *\n     * @param {Model} model\n     * @param {Object} [options]\n     */\n    removeSync(model, options = {}) {\n        this._locator.storage.removeItem(this._locator.locate(model));\n        this._removeId(this._locator.getModelId(model));\n    }\n\n    /**\n     * Does exists an item with given id?\n     *\n     * @param id\n     *\n     * @return {boolean}\n     */\n    has(id) {\n        return this._locator.storage.getItem(this._locator.locateById(id)) !== null;\n    }\n\n    /**\n     * Return Array with all stored models ids.\n     */\n    getKeys() {\n        const ids = [];\n        const item = this._locator.storage.getItem(this._getIdsKey());\n\n        if (item !== null) {\n            let data;\n\n            try {\n                data = JSON.parse(item);\n            } catch (e) {\n                data = [];\n            }\n\n            if (Array.isArray(data)) {\n                data.forEach((id) => {\n                    if (id !== null && this.has(id) && typeof id.toString === 'function'\n                        && ids.indexOf(id.toString()) === -1\n                    ) {\n                        ids.push(id.toString());\n                    }\n                });\n            }\n        }\n\n        return ids;\n    }\n\n    /**\n     * The key that gives access to Models Ids.\n     *\n     * @return {string}\n     *\n     * @protected\n     */\n    _getIdsKey() {\n        return '__ids__' + this._locator.basePath;\n    }\n\n    /**\n     * Persist Model Id.\n     *\n     * @param id\n     *\n     * @protected\n     */\n    _persistId(id) {\n        if (id !== null && this.has(id) && typeof id.toString === 'function') {\n            const ids = this.getKeys();\n\n            if (ids.indexOf(id.toString()) === -1) {\n                ids.push(id.toString());\n                this._locator.storage.setItem(this._getIdsKey(), JSON.stringify(ids));\n            }\n        }\n    }\n\n    /**\n     * Remove Model Id.\n     *\n     * @param id\n     *\n     * @protected\n     */\n    _removeId(id) {\n        const ids = this.getKeys().filter(el => el.toString() !== id.toString());\n        this._locator.storage.setItem(this._getIdsKey(), JSON.stringify(ids));\n    }\n}\n","import RepositoryInterface from './RepositoryInterface';\n\n/**\n * Data collection from Web Storage API.\n * @url https://developer.mozilla.org/en-US/docs/Web/API/Storage\n */\nexport default class StorageRepository extends RepositoryInterface {\n    /**\n     * @param {Model.prototype} modelClass\n     * @param {StorageLocatorAbstract} locator\n     * @param {StorageModelManager} manager\n     */\n    constructor(modelClass, locator, manager) {\n        super();\n        /** @protected */\n        this._modelClass = modelClass;\n        /** @protected */\n        this._locator = locator;\n        /** @protected */\n        this._manager = manager;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findOne(id) {\n        return this._manager.get(id, this._modelClass);\n    }\n\n    /**\n     * Synchronous version of the `findOne` method.\n     *\n     * @param id\n     *\n     * @return {Model}\n     */\n    findOneSync(id) {\n        return this._manager.getSync(id, this._modelClass);\n    }\n\n    /**\n     * Get all Models.\n     *\n     * @return {Model.Array}\n     */\n    getAll() {\n        return this._manager.getAll(this._modelClass);\n    }\n}\n","import LocatorAbstract from './LocatorAbstract';\nimport StorageModelManager from '../model-manager/StorageModelManager';\nimport StorageRepository from '../repository/StorageRepository';\n\n/**\n * Locator to Storage API.\n * @url https://developer.mozilla.org/en-US/docs/Web/API/Storage\n */\nexport default class StorageLocatorAbstract extends LocatorAbstract {\n    /**\n     * Web Storage API.\n     *\n     * @return {Storage}\n     */\n    get storage() {\n        throw new Error('storage should be defined in StorageLocator');\n    }\n\n    /**\n     * Base path in URL.\n     *\n     * @return {string}\n     */\n    get basePath() {\n        throw new Error('basePath should be defined in StorageLocator');\n    }\n\n    /**\n     * @inheritdoc\n     */\n    locate(model, options = {}) {\n        if (this.isEmptyModelId(model)) {\n            throw new Error('Model Id cannot be empty in StorageLocator');\n        }\n\n        return this.locateById(this.getModelId(model), options);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    locateById(id, options = {}) {\n        return `${this.basePath}/${id}`;\n    }\n\n    /**\n     * @inheritdoc\n     *\n     * @return {StorageModelManager.prototype}\n     */\n    getModelManagerClass() {\n        return StorageModelManager;\n    }\n\n    /**\n     * @inheritdoc\n     *\n     * @return {StorageRepository.prototype}\n     */\n    getRepositoryClass() {\n        return StorageRepository;\n    }\n}\n","import StorageLocatorAbstract from './StorageLocatorAbstract';\n\n/**\n * Locator to localStorage.\n * @url https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n */\nexport default class LocalStorageLocatorAbstract extends StorageLocatorAbstract {\n    /**\n     * @inheritdoc\n     */\n    get storage() {\n        return localStorage;\n    }\n}\n","import StorageLocatorAbstract from './StorageLocatorAbstract';\n\n/**\n * Locator to sessionStorage.\n * @url https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n */\nexport default class SessionStorageLocatorAbstract extends StorageLocatorAbstract {\n    /**\n     * @inheritdoc\n     */\n    get storage() {\n        return sessionStorage;\n    }\n}\n","import FactoryInterface from './FactoryInterface';\n\nexport default class StorageFactory extends FactoryInterface {\n    /**\n     * @inheritdoc\n     *\n     * @param {StorageLocatorAbstract} locator\n     * @return {StorageModelManager}\n     */\n    createManager(locator) {\n        const Manager = locator.getModelManagerClass();\n\n        return new Manager(locator);\n    }\n\n    /**\n     * @inheritdoc\n     *\n     * @param {Model.prototype} modelClass\n     * @param {StorageLocatorAbstract} locator\n     * @return {StorageRepository}\n     */\n    createRepository(modelClass, locator) {\n        const Repository = locator.getRepositoryClass();\n        const manager = this.createManager(locator);\n\n        return new Repository(modelClass, locator, manager);\n    }\n}\n","import Factory from './StorageFactory';\n\nconst factory = new Factory();\n\nexport default factory;\n","import namespace from './core/namespace';\nimport Model from 'objectmodel'; // http://objectmodel.js.org/docs/v2/\nimport DynamicModel from './model/DynamicModel';\nimport Interface from './core/Interface';\nimport LocatorInterface from './locator/LocatorInterface';\nimport ModelManagerInterface from './model-manager/ModelManagerInterface';\nimport RepositoryInterface from './repository/RepositoryInterface';\nimport LocatorAbstract from './locator/LocatorAbstract';\nimport ModelManagerAbstract from './model-manager/ModelManagerAbstract';\nimport HTTPLocatorAbstract from './locator/HTTPLocatorAbstract';\nimport HTTPModelManager from './model-manager/HTTPModelManager';\nimport HTTPRepository from './repository/HTTPRepository';\nimport httpFactory from './factory/http';\nimport createHTTPClient from './http/createClient';\nimport httpClientConfig from './http/clientConfig';\nimport TransformerInterface from './transformer/TransformerInterface';\nimport InputTransformer from './transformer/InputTransformer';\nimport OutputTransformer from './transformer/OutputTransformer';\nimport CustomTransformer from './transformer/CustomTransformer';\nimport mergeTransformers from './transformer/mergeTransformers';\nimport modelHelpers from './model/modelHelpers';\nimport StorageLocatorAbstract from './locator/StorageLocatorAbstract';\nimport LocalStorageLocatorAbstract from './locator/LocalStorageLocatorAbstract';\nimport SessionStorageLocatorAbstract from './locator/SessionStorageLocatorAbstract';\nimport StorageModelManager from './model-manager/StorageModelManager';\nimport StorageRepository from './repository/StorageRepository';\nimport storageFactory from './factory/storage';\n\nconst modelPersist = {\n    Interface,\n    Model,\n    DynamicModel,\n    modelHelpers,\n    LocatorInterface,\n    ModelManagerInterface,\n    RepositoryInterface,\n    LocatorAbstract,\n    ModelManagerAbstract,\n    HTTPLocatorAbstract,\n    HTTPModelManager,\n    HTTPRepository,\n    httpFactory,\n    StorageLocatorAbstract,\n    LocalStorageLocatorAbstract,\n    SessionStorageLocatorAbstract,\n    StorageModelManager,\n    StorageRepository,\n    storageFactory,\n    http: {\n        createClient: createHTTPClient,\n        config: httpClientConfig\n    },\n    transformer: {\n        TransformerInterface,\n        InputTransformer,\n        OutputTransformer,\n        CustomTransformer,\n        mergeTransformers\n    }\n};\n\nnamespace(modelPersist);\n\nexport default modelPersist;\n"],"names":["namespace","object","keys","forEach","key","prop","descriptor","Object","getOwnPropertyDescriptor","defineProperty","value","constructor","DynamicModel","TypeError","hasOwnProperty","JSON","stringify","Interface","Error","LocatorInterface","model","defineInterfaceMethod","id","ModelManagerInterface","modelClass","RepositoryInterface","TransformerInterface","InputTransformer","ModelHelpers","isRaw","isModel","data","get","_getObjectValue","isRawObject","Model","Array","isArray","item","push","getData","helpers","OutputTransformer","modelHelpers","LocatorAbstract","getIdPropName","getModelId","length","ModelManagerAbstract","Transformer","_locator","getInputTransformerClass","getOutputTransformerClass","HTTPModelManager","locator","httpClient","_client","Promise","resolve","reject","locateById","_getRequestOptions","then","response","createInputTransformer","transform","catch","e","requestOptions","method","isEmptyModelId","post","put","locate","createOutputTransformer","babelHelpers.typeof","delete","additional","HTTPRepository","manager","_modelClass","_manager","HTTPLocatorAbstract","hostPath","basePath","path","getBaseURL","options","getUrl","FactoryInterface","ClientConfig","assign","_options","createClient","headers","axios","create","config","HTTPFactory","Manager","getModelManagerClass","Repository","getRepositoryClass","createManager","factory","Factory","CustomTransformer","mergeTransformers","transformers","transformer","StorageModelManager","getSync","storage","getItem","parse","ArrayModel","items","getKeys","saveSync","setItem","_persistId","removeSync","removeItem","_removeId","ids","_getIdsKey","has","toString","indexOf","filter","el","StorageRepository","getAll","StorageLocatorAbstract","LocalStorageLocatorAbstract","localStorage","SessionStorageLocatorAbstract","sessionStorage","StorageFactory","modelPersist","createHTTPClient","httpClientConfig"],"mappings":"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"}