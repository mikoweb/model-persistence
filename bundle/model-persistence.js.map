{"version":3,"file":"model-persistence.js","sources":["../src/core/Interface.js","../src/locator/LocatorInterface.js","../src/model-manager/ModelManagerInterface.js","../src/repository/RepositoryInterface.js","../src/model-manager/HTTPModelManager.js","../src/repository/HTTPRepository.js","../src/locator/HTTPLocatorAbstract.js","../src/http/createClient.js","../src/factory/HTTPFactory.js","../src/factory/http.js","../src/index.js"],"sourcesContent":["export default class Interface {\n    defineInterfaceMethod() {\n        throw new Error('Class should implement this method');\n    }\n}\n","import Interface from '../core/Interface';\n\n/**\n * Data locator.\n */\nexport default class LocatorInterface extends Interface {\n    /**\n     * Locate place where model is storage.\n     *\n     * @param {Model} model\n     * @param {Object} [options]\n     * @return {string}\n     */\n    locate(model, options = {}) {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Name of id property.\n     *\n     * @return {string}\n     */\n    getIdPropName() {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * ModelManagerClass related to this locator.\n     *\n     * @return {ModelManagerInterface.prototype}\n     */\n    getModelManagerClass() {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * RepositoryClass related to this locator.\n     *\n     * @return {RepositoryInterface.prototype}\n     */\n    getRepositoryClass() {\n        this.defineInterfaceMethod();\n    }\n}\n","import Interface from '../core/Interface';\n\n/**\n * Data persistence layer.\n */\nexport default class ModelManagerInterface extends Interface {\n    /**\n     * Get model by id from storage.\n     *\n     * @async\n     * @param id\n     * @param {Model.prototype} modelClass\n     * @return {Promise.<Model>}\n     */\n    get(id, modelClass) {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Save model to storage.\n     *\n     * @async\n     * @param {Model} model\n     * @return {Promise.<Boolean>}\n     */\n    save(model) {\n        this.defineInterfaceMethod();\n    }\n\n    /**\n     * Remove model from storage.\n     *\n     * @async\n     * @param {Model} model\n     * @return {Promise.<Boolean>}\n     */\n    remove(model) {\n        this.defineInterfaceMethod();\n    }\n}\n","import Interface from '../core/Interface';\n\n/**\n * Repository pattern - data collection.\n */\nexport default class RepositoryInterface extends Interface {\n    /**\n     * Find one model by id from storage.\n     *\n     * @async\n     * @param id\n     * @return {Promise.<Model>}\n     */\n    findOne(id) {\n        this.defineInterfaceMethod();\n    }\n}\n","import ModelManagerInterface from './ModelManagerInterface';\n\n/**\n * Data persistence by HTTP protocol.\n */\nexport default class HTTPModelManager extends ModelManagerInterface {\n    /**\n     * @param {HTTPLocatorAbstract} locator\n     * @param {AxiosInstance} httpClient\n     */\n    constructor(locator, httpClient) {\n        super();\n        this._locator = locator;\n        this._client = httpClient;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    get(id, modelClass) {\n        return new Promise((resolve, reject) => {\n            // TODO\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    save(model) {\n        return new Promise((resolve, reject) => {\n            // TODO\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    remove(model) {\n        return new Promise((resolve, reject) => {\n            // TODO\n        });\n    }\n}\n","import RepositoryInterface from './RepositoryInterface';\n\n/**\n * Data collection from HTTP protocol.\n */\nexport default class HTTPRepository extends RepositoryInterface {\n    /**\n     * @param {Model.prototype} modelClass\n     * @param {HTTPLocatorAbstract} locator\n     * @param {HTTPModelManager} manager\n     * @param {AxiosInstance} httpClient\n     */\n    constructor(modelClass, locator, manager, httpClient) {\n        super();\n        /** @protected */\n        this._modelClass = modelClass;\n        /** @protected */\n        this._locator = locator;\n        /** @protected */\n        this._manager = manager;\n        /** @protected */\n        this._client = httpClient;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findOne(id) {\n        return this._manager.get(id, this._modelClass);\n    }\n}\n","import LocatorInterface from './LocatorInterface';\nimport HTTPModelManager from '../model-manager/HTTPModelManager';\nimport HTTPRepository from '../repository/HTTPRepository';\n\n/**\n * Locator which locates data by HTTP protocol.\n */\nexport default class HTTPLocatorAbstract extends LocatorInterface {\n    /**\n     * Host path like https://google.com. It's optionally.\n     *\n     * @return {string|null}\n     */\n    get hostPath() {\n        return null;\n    }\n\n    /**\n     * Base path in URL.\n     *\n     * @return {string}\n     */\n    get basePath() {\n        throw new Error('basePath should be defined in HTTPLocator');\n    }\n\n    /**\n     * Additional headers e.g. api key.\n     *\n     * @return {Object}\n     */\n    get headers() {\n        return {};\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getIdPropName() {\n        return 'id';\n    }\n\n    /**\n     * Get base URL.\n     *\n     * @return {string}\n     */\n    getBaseURL() {\n        return `${this.hostPath}${this.basePath}`;\n    }\n\n    /**\n     * Get custom URL.\n     *\n     * @param {string} path\n     * @return {string}\n     */\n    getUrl(path) {\n        return `${this.getBaseURL()}${path}`;\n    }\n\n    /**\n     * Get id from model.\n     *\n     * @param {Model} model\n     * @return {*}\n     */\n    getModelId(model) {\n        if (typeof model !== 'object' || !model.hasOwnProperty(this.getIdPropName())) {\n            new Error('Model has no property ' + this.getIdPropName());\n        }\n\n        return model[this.getIdPropName()];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    locate(model, options = {}) {\n        const id = this.getModelId(model);\n        let path = '';\n\n        if (id !== null && typeof id !== 'undefined' && !isNaN(id)) {\n            path += `/${id}`;\n        }\n\n        return this.getUrl(path);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getModelManagerClass() {\n        return HTTPModelManager;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getRepositoryClass() {\n        return HTTPRepository;\n    }\n}\n","import axios from 'axios';\n\n/**\n * @param {HTTPLocatorAbstract} locator\n * @return {AxiosInstance}\n */\nconst createClient = (locator) => {\n    return axios.create({\n    });\n};\n\nexport default createClient;\n","import HTTPModelManager from '../model-manager/HTTPModelManager';\nimport HTTPRepository from '../repository/HTTPRepository';\nimport createClient from '../http/createClient';\n\nexport default class HTTPFactory {\n    /**\n     * Create ModelManager object.\n     *\n     * @param {HTTPLocatorAbstract} locator\n     * @return {HTTPModelManager}\n     */\n    createManager(locator) {\n        return new HTTPModelManager(locator, createClient(locator));\n    }\n\n    /**\n     * Create Repository object.\n     *\n     * @param {Model.prototype} modelClass\n     * @param {HTTPLocatorAbstract} locator\n     * @return {HTTPRepository}\n     */\n    createRepository(modelClass, locator) {\n        const manager = this.createManager(locator);\n\n        return new HTTPRepository(modelClass, locator, manager, createClient(locator));\n    }\n}\n","import Factory from './HTTPFactory';\n\nconst factory = new Factory();\n\nexport default factory;\n","import Model from \"objectmodel\"; // http://objectmodel.js.org/docs/v2/\nimport LocatorInterface from './locator/LocatorInterface';\nimport ModelManagerInterface from './model-manager/ModelManagerInterface';\nimport RepositoryInterface from './repository/RepositoryInterface';\nimport HTTPLocatorAbstract from './locator/HTTPLocatorAbstract';\nimport HTTPModelManager from './model-manager/HTTPModelManager';\nimport HTTPRepository from './repository/HTTPRepository';\nimport httpFactory from './factory/http';\nimport createHTTPClient from './http/createClient';\n\nexport default {\n    Model,\n    LocatorInterface,\n    ModelManagerInterface,\n    RepositoryInterface,\n    HTTPLocatorAbstract,\n    HTTPModelManager,\n    HTTPRepository,\n    httpFactory,\n    http: {\n        createClient: createHTTPClient\n    }\n};\n"],"names":["Interface","Error","LocatorInterface","model","defineInterfaceMethod","ModelManagerInterface","id","modelClass","RepositoryInterface","HTTPModelManager","locator","httpClient","_locator","_client","Promise","resolve","reject","HTTPRepository","manager","_modelClass","_manager","get","HTTPLocatorAbstract","hostPath","basePath","path","getBaseURL","hasOwnProperty","getIdPropName","getModelId","isNaN","getUrl","createClient","axios","create","HTTPFactory","createManager","factory","Factory","createHTTPClient"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAqBA;;;;;;;gDACO;kBACd,IAAIC,KAAJ,CAAU,oCAAV,CAAN;;;;;;ACAR;;;;IAGqBC;;;;;;;;;;;;;;;;;;2BAQVC,OAAqB;WACnBC,qBAAL;;;;;;;;;;;oCAQY;WACPA,qBAAL;;;;;;;;;;;2CAQmB;WACdA,qBAAL;;;;;;;;;;;yCAQiB;WACZA,qBAAL;;;;EApCsCJ;;ACH9C;;;;IAGqBK;;;;;;;;;;;;;;;;;;;2BASbC,IAAIC,YAAY;WACXH,qBAAL;;;;;;;;;;;;;yBAUCD,OAAO;WACHC,qBAAL;;;;;;;;;;;;;2BAUGD,OAAO;WACLC,qBAAL;;;;EAhC2CJ;;ACHnD;;;;IAGqBQ;;;;;;;;;;;;;;;;;;4BAQTF,IAAI;WACHF,qBAAL;;;;EATyCJ;;ACHjD;;;;IAGqBS;;;;;;;8BAKLC,OAAZ,EAAqBC,UAArB,EAAiC;;;;;cAExBC,QAAL,GAAgBF,OAAhB;cACKG,OAAL,GAAeF,UAAf;;;;;;;;;;;+BAMAL,IAAIC,YAAY;mBACT,IAAIO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;aAAjC,CAAP;;;;;;;;;6BAQCb,OAAO;mBACD,IAAIW,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;aAAjC,CAAP;;;;;;;;;+BAQGb,OAAO;mBACH,IAAIW,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;aAAjC,CAAP;;;;EAjCsCX;;ACH9C;;;;IAGqBY;;;;;;;;;4BAOLV,UAAZ,EAAwBG,OAAxB,EAAiCQ,OAAjC,EAA0CP,UAA1C,EAAsD;;;;;;cAG7CQ,WAAL,GAAmBZ,UAAnB;;cAEKK,QAAL,GAAgBF,OAAhB;;cAEKU,QAAL,GAAgBF,OAAhB;;cAEKL,OAAL,GAAeF,UAAf;;;;;;;;;;;gCAMIL,IAAI;mBACD,KAAKc,QAAL,CAAcC,GAAd,CAAkBf,EAAlB,EAAsB,KAAKa,WAA3B,CAAP;;;;EAvBoCX;;ACD5C;;;;IAGqBc;;;;;;;;;;;;;;;wCA+BD;mBACL,IAAP;;;;;;;;;;;qCAQS;wBACC,KAAKC,QAAf,GAA0B,KAAKC,QAA/B;;;;;;;;;;;;+BASGC,MAAM;wBACC,KAAKC,UAAL,EAAV,GAA8BD,IAA9B;;;;;;;;;;;;mCASOtB,OAAO;gBACV,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAAjB,IAA6B,CAACA,MAAMwB,cAAN,CAAqB,KAAKC,aAAL,EAArB,CAAlC,EAA8E;oBACtE3B,KAAJ,CAAU,2BAA2B,KAAK2B,aAAL,EAArC;;;mBAGGzB,MAAM,KAAKyB,aAAL,EAAN,CAAP;;;;;;;;;+BAMGzB,OAAqB;gBAClBG,KAAK,KAAKuB,UAAL,CAAgB1B,KAAhB,CAAX;gBACIsB,OAAO,EAAX;;gBAEInB,OAAO,IAAP,IAAe,OAAOA,EAAP,KAAc,WAA7B,IAA4C,CAACwB,MAAMxB,EAAN,CAAjD,EAA4D;8BAC5CA,EAAZ;;;mBAGG,KAAKyB,MAAL,CAAYN,IAAZ,CAAP;;;;;;;;;+CAMmB;mBACZhB,gBAAP;;;;;;;;;6CAMiB;mBACVQ,cAAP;;;;;;;;;;+BAvFW;mBACJ,IAAP;;;;;;;;;;;+BAQW;kBACL,IAAIhB,KAAJ,CAAU,2CAAV,CAAN;;;;;;;;;;;+BAQU;mBACH,EAAP;;;;EAzByCC;;ACLjD;;;;AAIA,IAAM8B,eAAe,SAAfA,YAAe,CAACtB,OAAD,EAAa;SACvBuB,MAAMC,MAAN,CAAa,EAAb,CAAP;CADJ;;ICFqBC;;;;;;;;;;;;;;sCAOHzB,SAAS;mBACZ,IAAID,gBAAJ,CAAqBC,OAArB,EAA8BsB,aAAatB,OAAb,CAA9B,CAAP;;;;;;;;;;;;;yCAUaH,YAAYG,SAAS;gBAC5BQ,UAAU,KAAKkB,aAAL,CAAmB1B,OAAnB,CAAhB;;mBAEO,IAAIO,cAAJ,CAAmBV,UAAnB,EAA+BG,OAA/B,EAAwCQ,OAAxC,EAAiDc,aAAatB,OAAb,CAAjD,CAAP;;;;;;ACvBR,IAAM2B,UAAU,IAAIC,WAAJ,EAAhB;;ACQA,YAAe;gBAAA;sCAAA;gDAAA;4CAAA;4CAAA;sCAAA;kCAAA;wBAAA;UASL;sBACYC;;CAVtB;;;;;;;;"}